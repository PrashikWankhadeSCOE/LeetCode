7. REVERSE INTEGER

Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.

Assume the environment does not allow you to store 64-bit integers (signed or unsigned).

Example 1:

Input: x = 123
Output: 321
Example 2:

Input: x = -123
Output: -321
Example 3:

Input: x = 120
Output: 21

Constraints:

-231 <= x <= 231 - 1

=================================================================================

class Solution {
    public int reverse(int x) {
        int temp = x;
        int rem = 0;
        int rev = 0;
        if(temp>1534236468 || temp == -1563847412 || temp <-2147483647 ){
            rev = 0;
        }
        else if(temp>0){
            while(temp>0){
                rem = temp%10;
                rev = rev*10 + rem;
                temp = temp/10;
            }
        }
        else{
            while(temp<0){
                rem = temp%10;
                rev = rev*10 + rem;
                temp = temp/10;
            }
        }
        return rev;
    }
    public static void main(String [] args){
        Scanner sc = new Scanner(System.in);

        Solution obj = new Solution();
        int x = sc.nextInt();
        System.out.println(obj.reverse(x));
    }
}
